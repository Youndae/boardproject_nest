import { HttpStatus } from '@nestjs/common';

export const ResponseStatusConstants = Object.freeze({
  // 2xx
  OK: { CODE: HttpStatus.OK, MESSAGE: 'SUCCESS'},
  CREATED: { CODE: HttpStatus.CREATED, MESSAGE: 'CREATED'},
  ACCEPTED: { CODE: HttpStatus.ACCEPTED, MESSAGE: 'ACCEPTED'},
  NO_CONTENT: { CODE: HttpStatus.NO_CONTENT, MESSAGE: 'NO_CONTENT'},

  // 4xx
  BAD_REQUEST: { CODE: HttpStatus.BAD_REQUEST, MESSAGE: 'BAD_REQUEST' },
  TOO_MANY_FILES: { CODE: HttpStatus.BAD_REQUEST, MESSAGE: 'TOO_MANY_FILES' },
  FILE_SIZE_TOO_LARGE: { CODE: HttpStatus.BAD_REQUEST, MESSAGE: 'FILE_SIZE_TOO_LARGE' },
  FILE_EXTENSION_NOT_ALLOWED: { CODE: HttpStatus.BAD_REQUEST, MESSAGE: 'FILE_EXTENSION_NOT_ALLOWED' },
  TOKEN_EXPIRED: { CODE: HttpStatus.UNAUTHORIZED, MESSAGE: 'TOKEN_EXPIRED' },
  TOKEN_INVALID: { CODE: HttpStatus.UNAUTHORIZED, MESSAGE: 'TOKEN_INVALID' },
  TOKEN_STEALING: { CODE: HttpStatus.UNAUTHORIZED, MESSAGE: 'TOKEN_STEALING' },
  UNAUTHORIZED: { CODE: HttpStatus.UNAUTHORIZED, MESSAGE: 'UNAUTHORIZED' },
  FORBIDDEN: { CODE: HttpStatus.FORBIDDEN, MESSAGE: 'FORBIDDEN' },
  NOT_FOUND: { CODE: HttpStatus.NOT_FOUND, MESSAGE: 'NOT_FOUND' },
  METHOD_NOT_ALLOWED: { CODE: HttpStatus.METHOD_NOT_ALLOWED, MESSAGE: 'METHOD_NOT_ALLOWED' },
  CONFLICT: { CODE: HttpStatus.CONFLICT, MESSAGE: 'CONFLICT' },
  UNPROCESSABLE_ENTITY: { CODE: HttpStatus.UNPROCESSABLE_ENTITY, MESSAGE: 'UNPROCESSABLE_ENTITY' },

  // 5xx
  INTERNAL_SERVER_ERROR: { CODE: HttpStatus.INTERNAL_SERVER_ERROR, MESSAGE: 'INTERNAL_SERVER_ERROR' },
  FILE_UPLOAD_ERROR: { CODE: HttpStatus.INTERNAL_SERVER_ERROR, MESSAGE: 'FILE_UPLOAD_ERROR' },
  BAD_GATEWAY: { CODE: HttpStatus.BAD_GATEWAY, MESSAGE: 'BAD_GATEWAY' },
})